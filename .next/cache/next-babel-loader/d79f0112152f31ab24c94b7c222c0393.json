{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './../../components/Layout/LayoutSuperAdmin';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport styles from './registerLand.module.css';\nimport factory from './../../ethereum/factory';\n\nvar RegisterLand = /*#__PURE__*/function (_Component) {\n  _inherits(RegisterLand, _Component);\n\n  var _super = _createSuper(RegisterLand);\n\n  function RegisterLand() {\n    var _this;\n\n    _classCallCheck(this, RegisterLand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      village: \"\",\n      district: \"\",\n      state: \"\",\n      ownerAddress: '',\n      buttonText: \"Register!\",\n      userAddress: \"\",\n      errorMessage: '',\n      surveyNumber: \"\",\n      marketValue: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"register\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var computedId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return factory.methods.computeId(_this.state.state, _this.state.district, _this.state.village, _this.state.surveyNumber).call();\n\n            case 4:\n              computedId = _context.sent;\n              console.log(computedId);\n              _context.next = 8;\n              return factory.methods.Registration(_this.state.state, _this.state.district, _this.state.village, _this.state.surveyNumber, _this.state.ownerAddress, _this.state.marketValue, computedId).send({\n                from: _this.state.userAddress\n              });\n\n            case 8:\n              _this.setState({\n                buttonText: \"Added!!!\"\n              });\n\n              Router.pushRoute('/superAdmin');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                errorMessage: _context.t0.message.slice(0, 50)\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(RegisterLand, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var userAddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return ethereum.selectedAddress;\n\n              case 2:\n                userAddress = _context2.sent;\n                this.setState({\n                  userAddress: userAddress\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"section\", {\n        className: styles.Main\n      }, __jsx(\"div\", {\n        className: styles.HeaderText\n      }, __jsx(\"h1\", {\n        className: styles.HeroText\n      }, \" Register Land \")), __jsx(Form, {\n        className: styles.AddForm,\n        onSubmit: this.register,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Village\"), __jsx(Input, {\n        required: true,\n        value: this.state.village,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            village: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n        value: this.state.district,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            district: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n        value: this.state.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            state: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Survey Number\"), __jsx(Input, {\n        type: \"number\",\n        value: this.state.surveyNumber,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            surveyNumber: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Owner's Address\"), __jsx(Input, {\n        required: true,\n        label: \"addrress\",\n        labelPosition: \"right\",\n        value: this.state.ownerAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ownerAddress: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Market Value\"), __jsx(Input, {\n        label: \"ether\",\n        labelPosition: \"right\",\n        type: \"number\",\n        value: this.state.marketValue,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            marketValue: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        primary: true\n      }, \" \", this.state.buttonText, \" \"))));\n    }\n  }]);\n\n  return RegisterLand;\n}(Component);\n\nexport default RegisterLand;","map":{"version":3,"sources":["/home/kaustubh/Documents/blockchain/fyp/proj_dev/c/pages/superAdmin/registerLand.js"],"names":["React","Component","Layout","Form","Button","Input","Message","styles","factory","RegisterLand","village","district","state","ownerAddress","buttonText","userAddress","errorMessage","surveyNumber","marketValue","event","preventDefault","methods","computeId","call","computedId","console","log","Registration","send","from","setState","Router","pushRoute","message","slice","ethereum","selectedAddress","Main","HeaderText","HeroText","AddForm","register","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './../../components/Layout/LayoutSuperAdmin';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport styles from './registerLand.module.css';\nimport factory from './../../ethereum/factory';\n\nclass RegisterLand extends Component {\n\n    state = {\n        village : \"\",\n        district : \"\",\n        state : \"\",\n        ownerAddress : '',\n        buttonText : \"Register!\",\n        userAddress : \"\",\n        errorMessage : '',\n        surveyNumber : \"\",\n        marketValue : 0\n    }\n\n    async componentDidMount() {\n        const userAddress = await ethereum.selectedAddress;\n        this.setState({userAddress : userAddress});\n    }\n\n    register = async () => {\n        event.preventDefault();\n        try{\n            const computedId = await factory.methods.computeId(\n                this.state.state,this.state.district,this.state.village,\n                this.state.surveyNumber\n            ).call();\n\n            console.log(computedId);\n\n            await factory.methods.Registration(\n                this.state.state,this.state.district,this.state.village,\n                this.state.surveyNumber,\n                this.state.ownerAddress,\n                this.state.marketValue,\n                computedId\n                )\n                .send({\n                from : this.state.userAddress\n            });\n            this.setState({buttonText : \"Added!!!\"});\n            Router.pushRoute('/superAdmin');\n        }catch(err) {\n            this.setState({errorMessage : err.message.slice(0,50)});\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <section className={styles.Main}>\n                        <div className={styles.HeaderText}>\n                            <h1 className={styles.HeroText}> Register Land </h1>\n                        </div>\n                        <Form className={styles.AddForm} onSubmit={this.register} error={!!this.state.errorMessage}>\n                            <Form.Field>\n                                <label>Village</label>\n                                <Input \n                                required \n                                value={this.state.village} \n                                onChange={event => this.setState({village : event.target.value})}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>District</label>\n                                <Input \n                                value={this.state.district} \n                                onChange={event => this.setState({district : event.target.value})}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>State</label>\n                                <Input \n                                value={this.state.state} \n                                onChange={event => this.setState({state : event.target.value})}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Survey Number</label>\n                                <Input  \n                                type=\"number\"\n                                value={this.state.surveyNumber}\n                                onChange={event => this.setState({surveyNumber : event.target.value})} />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Owner's Address</label>\n                                <Input \n                                required \n                                label=\"addrress\" \n                                labelPosition=\"right\" \n                                value={this.state.ownerAddress}\n                                onChange={event => this.setState({ownerAddress : event.target.value})}/>\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Market Value</label>\n                                <Input  \n                                label=\"ether\"\n                                labelPosition=\"right\"\n                                type=\"number\"\n                                value={this.state.marketValue}\n                                onChange={event => this.setState({marketValue : event.target.value})} />\n                            </Form.Field>\n                            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                            <Button primary> {this.state.buttonText} </Button>\n                        </Form>\n                </section>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterLand;"]},"metadata":{},"sourceType":"module"}